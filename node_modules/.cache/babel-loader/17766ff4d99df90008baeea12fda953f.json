{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Projects\\\\React Projects\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"downloadHandler\",\n    value: function downloadHandler(event) {\n      event.preventDefault();\n      domtoimage.toBlob(document.getElementById('my-node'), {\n        style: {\n          backgroundcolor: \"red\"\n        }\n      }).then(function (blob) {\n        saveAs(blob, 'myImage.png');\n      });\n      var images = [];\n      domtoimage.toBlob(document.getElementById('my-node'), {\n        style: {\n          backgroundcolor: \"red\"\n        }\n      }).then(function (blob) {\n        images.push(blob);\n      }).then(function () {\n        var zip = new JSZip();\n        zip.file('instagram.png', urls[0], {\n          binary: true\n        });\n        zip.file('dribbble.png', urls[1], {\n          binary: true\n        });\n        zip.file('facebook.png', urls[2], {\n          binary: true\n        });\n        zip.generateAsync({\n          type: \"blob\"\n        }, function updateCallback(metadata) {}).then(function callback(blob4) {\n          saveAs(blob4, \"designs.zip\");\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        width: \"500px\",\n        height: \"500px\"\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"my-node\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"sampleImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.downloadHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Download as Image \"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:\\Projects\\React Projects\\my-app\\src\\App.js"],"names":["React","Component","domtoimage","saveAs","JSZip","App","event","preventDefault","toBlob","document","getElementById","style","backgroundcolor","then","blob","images","push","zip","file","urls","binary","generateAsync","type","updateCallback","metadata","callback","blob4","divStyle","width","height","logo","downloadHandler","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,G;;;;;;;;;;;;;oCAEYC,K,EAAM;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACAL,MAAAA,UAAU,CAACM,MAAX,CAAkBC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB,EAAqD;AAACC,QAAAA,KAAK,EAAC;AAAEC,UAAAA,eAAe,EAAC;AAAlB;AAAP,OAArD,EACCC,IADD,CACM,UAAUC,IAAV,EAAgB;AAClBX,QAAAA,MAAM,CAACW,IAAD,EAAO,aAAP,CAAN;AACH,OAHD;AAIA,UAAIC,MAAM,GAAG,EAAb;AACAb,MAAAA,UAAU,CAACM,MAAX,CAAkBC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB,EAAqD;AAACC,QAAAA,KAAK,EAAC;AAAEC,UAAAA,eAAe,EAAC;AAAlB;AAAP,OAArD,EACCC,IADD,CACM,UAAUC,IAAV,EAAgB;AAClBC,QAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ;AACH,OAHD,EAGGD,IAHH,CAGQ,YAAU;AAChB,YAAII,GAAG,GAAG,IAAIb,KAAJ,EAAV;AACsBa,QAAAA,GAAG,CAACC,IAAJ,CAAS,eAAT,EAA0BC,IAAI,CAAC,CAAD,CAA9B,EAAmC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAnC;AACAH,QAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT,EAAyBC,IAAI,CAAC,CAAD,CAA7B,EAAkC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAlC;AACAH,QAAAA,GAAG,CAACC,IAAJ,CAAS,cAAT,EAAyBC,IAAI,CAAC,CAAD,CAA7B,EAAkC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAlC;AACAH,QAAAA,GAAG,CAACI,aAAJ,CAAkB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAlB,EAAoC,SAASC,cAAT,CAAwBC,QAAxB,EAAkC,CAAG,CAAzE,EACKX,IADL,CACU,SAASY,QAAT,CAAkBC,KAAlB,EAAyB;AAC3BvB,UAAAA,MAAM,CAACuB,KAAD,EAAQ,aAAR,CAAN;AACH,SAHL;AAIvB,OAZD;AAaD;;;6BACQ;AACP,UAAMC,QAAQ,GAAG;AACfC,QAAAA,KAAK,EAAE,OADQ;AAEfC,QAAAA,MAAM,EAAE;AAFO,OAAjB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAEF,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEG,IAAV;AAAiB,QAAA,GAAG,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CADF;AAQD;;;;EApCe/B,S;;AAuClB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\n\nclass App extends Component {\n\n  downloadHandler(event){\n    event.preventDefault();\n    domtoimage.toBlob(document.getElementById('my-node'),{style:{ backgroundcolor:\"red\"}})\n    .then(function (blob) {\n        saveAs(blob, 'myImage.png');\n    })\n    let images = [];\n    domtoimage.toBlob(document.getElementById('my-node'),{style:{ backgroundcolor:\"red\"}})\n    .then(function (blob) {\n        images.push(blob);\n    }).then(function(){\n      let zip = new JSZip();\n                            zip.file('instagram.png', urls[0], { binary: true });\n                            zip.file('dribbble.png', urls[1], { binary: true });\n                            zip.file('facebook.png', urls[2], { binary: true });\n                            zip.generateAsync({ type: \"blob\" }, function updateCallback(metadata) { })\n                                .then(function callback(blob4) {\n                                    saveAs(blob4, \"designs.zip\");\n                                })\n    })\n  }\n  render() {\n    const divStyle = {\n      width: \"500px\",\n      height: \"500px\"\n    }\n    return (\n      <div className=\"App\" style={divStyle}>\n        <div id=\"my-node\">\n          <img src={logo}  alt=\"sampleImage\" />\n        </div>\n        <button onClick={this.downloadHandler.bind(this)} >Download as Image </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}